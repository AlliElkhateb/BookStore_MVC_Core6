@using Microsoft.AspNetCore.Identity
@using BookStore.Models.ApplicationUser

@inject SignInManager<AppUser> SignInManager
@inject UserManager<AppUser> UserManager

<ul class="navbar-nav">
    @if (SignInManager.IsSignedIn(User))
    {
        @if (UserManager.GetUserAsync(User).Result.ProfilePicture is not null)
        {
            <li class="nav-item">
                <img src="data:image/*; base64,@(Convert.ToBase64String(UserManager.GetUserAsync(User).Result.ProfilePicture))"
             alt="profile picture" id="avatar" class="rounded-circle" />
            </li>
        }
        else
        {
            <li class="nav-item">
                <img src="~/assets/user/profile-picture.png" alt="profile picture" id="avatar" class="rounded-circle" />
            </li>
        }
        <li class="nav-item" id="manage-container">
            <a id="manage" class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">@UserManager.GetUserName(User)</a>
        </li>
        <li class="nav-item">
            <form id="logoutForm" class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                <button id="logout" type="submit" class="nav-link btn btn-link text-dark">Logout</button>
            </form>
        </li>
    }
    else
    {
        <li class="nav-item">
            <a class="nav-link text-dark" id="register" asp-area="Identity" asp-page="/Account/Register">Register</a>
        </li>
        <li class="nav-item">
            <a class="nav-link text-dark" id="login" asp-area="Identity" asp-page="/Account/Login">Login</a>
        </li>
    }
</ul>
